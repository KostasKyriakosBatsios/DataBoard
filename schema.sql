-- --------------------------------------------------------
-- Διακομιστής:                  127.0.0.1
-- Έκδοση διακομιστή:            10.4.32-MariaDB - mariadb.org binary distribution
-- Λειτ. σύστημα διακομιστή:     Win64
-- HeidiSQL Έκδοση:              12.6.0.6783
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

-- Dumping structure for πίνακας databoard.admins
CREATE TABLE IF NOT EXISTS `admins` (
  `admin_id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  PRIMARY KEY (`admin_id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Dumping data for table databoard.admins: ~2 rows (approximately)
INSERT INTO `admins` (`admin_id`, `username`, `password`) VALUES
	(1, 'Kostas', '1234'),
	(2, 'Alex', '5678');

-- Dumping structure for πίνακας databoard.final_records
CREATE TABLE IF NOT EXISTS `final_records` (
  `user_id` int(11) unsigned DEFAULT NULL,
  `user_name` varchar(255) DEFAULT NULL,
  `video_id` int(11) unsigned DEFAULT NULL,
  `video_title` varchar(255) DEFAULT NULL,
  `video_duration` int(11) unsigned DEFAULT NULL,
  `total_view_time` int(11) unsigned DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Dumping data for table databoard.final_records: ~0 rows (approximately)

-- Dumping structure for πίνακας databoard.users
CREATE TABLE IF NOT EXISTS `users` (
  `id` int(11) unsigned NOT NULL,
  `username` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Dumping data for table databoard.users: ~100 rows (approximately)
INSERT INTO `users` (`id`, `username`) VALUES
	(1, 'Alex Oik'),
	(2, 'Kostas Bats'),
	(3, 'Michael Jones'),
	(4, 'Emily Brown'),
	(5, 'David Wilson'),
	(6, 'Sophia Davis'),
	(7, 'Daniel Miller'),
	(8, 'Olivia Martin'),
	(9, 'William Taylor'),
	(10, 'Emma Anderson'),
	(11, 'Alice Johnson'),
	(12, 'Bob Smith'),
	(13, 'Charlie Brown'),
	(14, 'Diana Miller'),
	(15, 'Edward Wilson'),
	(16, 'Fiona Davis'),
	(17, 'George Taylor'),
	(18, 'Hannah Martin'),
	(19, 'Isaac Anderson'),
	(20, 'Julia White'),
	(21, 'Liam Harris'),
	(22, 'Mia Thomas'),
	(23, 'Noah Davis'),
	(24, 'Olivia Wilson'),
	(25, 'Peyton Taylor'),
	(26, 'Quinn Anderson'),
	(27, 'Ryan Brown'),
	(28, 'Sophia Martin'),
	(29, 'Tyler Smith'),
	(30, 'Ursula Johnson'),
	(31, 'Victor Harris'),
	(32, 'Wendy Davis'),
	(33, 'Zachary Johnson'),
	(34, 'Abigail Harris'),
	(35, 'Benjamin Thomas'),
	(36, 'Charlotte Davis'),
	(37, 'David Harris'),
	(38, 'Emma Taylor'),
	(39, 'Felix Wilson'),
	(40, 'Grace Anderson'),
	(41, 'Henry Martin'),
	(42, 'Isabel Smith'),
	(43, 'Jack Taylor'),
	(44, 'Kylie Martin'),
	(45, 'Landon Brown'),
	(46, 'Megan Wilson'),
	(47, 'Nathan Anderson'),
	(48, 'Olivia Davis'),
	(49, 'Peter Wilson'),
	(50, 'Quincy Taylor'),
	(51, 'Rachel Anderson'),
	(52, 'Samuel Smith'),
	(53, 'Taylor Harris'),
	(54, 'Ulysses Martin'),
	(55, 'Victoria Johnson'),
	(56, 'Wyatt Davis'),
	(57, 'Xena Wilson'),
	(58, 'Yannick Taylor'),
	(59, 'Zane Martin'),
	(60, 'Abby Harris'),
	(61, 'Blake Wilson'),
	(62, 'Cora Anderson'),
	(63, 'Dylan Smith'),
	(64, 'Eva Taylor'),
	(65, 'Finn Martin'),
	(66, 'Giselle Johnson'),
	(67, 'Holden Davis'),
	(68, 'Ivy Wilson'),
	(69, 'Jaxon Taylor'),
	(70, 'Kira Martin'),
	(71, 'Leo Harris'),
	(72, 'Mia Wilson'),
	(73, 'Noah Davis'),
	(74, 'Olivia Taylor'),
	(75, 'Parker Johnson'),
	(76, 'Quinn Smith'),
	(77, 'Rebecca Harris'),
	(78, 'Silas Martin'),
	(79, 'Tessa Davis'),
	(80, 'Uriel Wilson'),
	(81, 'Violet Taylor'),
	(82, 'Wesley Anderson'),
	(83, 'Xander Smith'),
	(84, 'Yara Harris'),
	(85, 'Zachary Martin'),
	(86, 'Aria Wilson'),
	(87, 'Bryce Taylor'),
	(88, 'Celia Davis'),
	(89, 'Derek Harris'),
	(90, 'Ella Martin'),
	(91, 'Felix Johnson'),
	(92, 'Haley Anderson'),
	(93, 'Ivan Smith'),
	(94, 'Jenna Martin'),
	(95, 'Kai Taylor'),
	(96, 'Lily Harris'),
	(97, 'Mason Wilson'),
	(98, 'Nora Davis'),
	(99, 'Oscar Taylor'),
	(100, 'Piper Johnson');

-- Dumping structure for πίνακας databoard.videos
CREATE TABLE IF NOT EXISTS `videos` (
  `id` int(11) unsigned NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `duration` int(11) unsigned DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Dumping data for table databoard.videos: ~100 rows (approximately)
INSERT INTO `videos` (`id`, `title`, `duration`) VALUES
	(1, 'Introduction to Programming', 930),
	(2, 'Web Development Basics', 1365),
	(3, 'Data Science Fundamentals', 1100),
	(4, 'Machine Learning Basics', 1510),
	(5, 'Mobile App Development Overview', 1215),
	(6, 'Database Design Principles', 1075),
	(7, 'Cybersecurity Essentials', 880),
	(8, 'Cloud Computing Basics', 1170),
	(9, 'Artificial Intelligence Overview', 1265),
	(10, 'Software Testing Techniques', 1010),
	(11, 'Blockchain Fundamentals', 1395),
	(12, 'Python Programming for Beginners', 980),
	(13, 'Responsive Web Design Techniques', 1120),
	(14, 'Advanced Data Analysis with Python', 1285),
	(15, 'Deep Learning Concepts Explained', 1440),
	(16, 'Mobile App UI/UX Design', 950),
	(17, 'SQL Database Optimization Strategies', 890),
	(18, 'Advanced Cybersecurity Protocols', 1105),
	(19, 'Introduction to Cloud Service Providers', 1035),
	(20, 'Machine Learning Applications in Business', 1360),
	(21, 'Agile Software Development Practices', 970),
	(22, 'Decentralized Applications with Ethereum', 1255),
	(23, 'JavaScript Fundamentals', 1035),
	(24, 'Web Accessibility Best Practices', 920),
	(25, 'Data Visualization Techniques', 1340),
	(26, 'Reinforcement Learning Concepts', 1205),
	(27, 'Cross-Platform Mobile App Development', 1125),
	(28, 'Advanced SQL Query Optimization', 880),
	(29, 'Network Security Fundamentals', 990),
	(30, 'Cloud Deployment Strategies', 1185),
	(31, 'Natural Language Processing Basics', 1425),
	(32, 'Automated Software Testing Frameworks', 1050),
	(33, 'Smart Contracts Development with Solidity', 1305),
	(34, 'Java Programming for Intermediate', 975),
	(35, 'Front-end Frameworks Comparison', 1170),
	(36, 'Predictive Analytics in Business', 950),
	(37, 'IoT Security and Privacy', 1090),
	(38, 'Serverless Computing Overview', 1030),
	(39, 'Computer Vision Applications', 1235),
	(40, 'Usability Testing Techniques', 990),
	(41, 'Ethereum Blockchain Development', 1260),
	(42, 'C# Programming for Advanced Developers', 1120),
	(43, 'React.js Fundamentals', 1125),
	(44, 'Mobile App Performance Optimization', 990),
	(45, 'Big Data Analytics with Hadoop', 1355),
	(46, 'Introduction to Quantum Computing', 1180),
	(47, 'Swift Programming for iOS Development', 1025),
	(48, 'Database Scaling Techniques', 950),
	(49, 'Cybersecurity Threat Intelligence', 1075),
	(50, 'Serverless Architecture Patterns', 1165),
	(51, 'Generative Adversarial Networks (GANs)', 1300),
	(52, 'Automated UI Testing with Selenium', 1055),
	(53, 'Smart Contracts on Binance Smart Chain', 1235),
	(54, 'Advanced Java Concepts', 990),
	(55, 'Vue.js for Front-end Development', 1140),
	(56, 'Predictive Maintenance with Machine Learning', 1225),
	(57, 'Secure Coding Practices', 980),
	(58, 'Microservices Design Principles', 1155),
	(59, 'Computer Vision in Healthcare', 1280),
	(60, 'Accessibility Testing Strategies', 940),
	(61, 'Decentralized Identity with Blockchain', 1265),
	(62, 'Python Web Scraping Techniques', 1045),
	(63, 'Android App Architecture Patterns', 1070),
	(64, 'Data Warehousing and ETL Processes', 1330),
	(65, 'Rust Programming Language Overview', 1125),
	(66, 'WebAssembly for Modern Web Development', 990),
	(67, 'Data Ethics and Privacy', 1205),
	(68, 'CI/CD Pipelines with Jenkins', 1150),
	(69, 'Blockchain Interoperability Solutions', 1285),
	(70, 'JavaScript Frameworks Comparison', 990),
	(71, 'Django Web Development Framework', 1075),
	(72, 'Cross-Platform Mobile App Frameworks', 990),
	(73, 'Big Data Processing with Apache Spark', 1350),
	(74, 'Introduction to Quantum Machine Learning', 1175),
	(75, 'Kotlin Programming Language Overview', 1020),
	(76, 'Database Replication Strategies', 945),
	(77, 'Social Engineering Prevention', 1080),
	(78, 'Container Orchestration with Kubernetes', 1170),
	(79, 'Explainable Artificial Intelligence (XAI)', 1295),
	(80, 'Game Development with Unity', 1050),
	(81, 'NFTs and Blockchain Use Cases', 1230),
	(82, 'Advanced C++ Programming', 985),
	(83, 'Angular Framework for Front-end Development', 1135),
	(84, 'Time Series Analysis with Python', 1210),
	(85, 'Cybersecurity Incident Response', 975),
	(86, 'Event-Driven Microservices Architecture', 1145),
	(87, 'AI in Natural Language Understanding', 1270),
	(88, 'Usability in Mobile App Design', 935),
	(89, 'Smart Contracts on Polygon Blockchain', 1255),
	(90, 'Ruby on Rails Web Development', 1035),
	(91, 'iOS App Security Best Practices', 1060),
	(92, 'Data Lakes and Data Virtualization', 1325),
	(93, 'Go Programming Language Overview', 1110),
	(94, 'Progressive Web App Development', 985),
	(95, 'Blockchain Governance Models', 1195),
	(96, 'WebRTC for Real-Time Communication', 990),
	(97, 'Data Governance and Compliance', 1190),
	(98, 'Automated Deployment with Ansible', 1125),
	(99, 'Interoperability in Blockchain Networks', 1275),
	(100, 'Node.js for Server-Side Development', 1020);

-- Dumping structure for πίνακας databoard.view_records
CREATE TABLE IF NOT EXISTS `view_records` (
  `user` int(11) unsigned DEFAULT NULL,
  `video` int(11) unsigned DEFAULT NULL,
  `begin` int(11) unsigned DEFAULT NULL,
  `end` int(11) unsigned DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- Dumping data for table databoard.view_records: ~302 rows (approximately)
INSERT INTO `view_records` (`user`, `video`, `begin`, `end`) VALUES
	(1, 10, 10, 25),
	(1, 10, 10, 12),
	(1, 10, 18, 35),
	(1, 10, 1, 14),
	(1, 10, 590, 600),
	(2, 5, 20, 50),
	(2, 5, 5, 30),
	(2, 5, 80, 90),
	(3, 2, 42, 90),
	(3, 2, 70, 200),
	(4, 2, 5, 50),
	(4, 3, 90, 300),
	(4, 3, 45, 100),
	(4, 3, 5, 50),
	(5, 1, 39, 65),
	(5, 1, 40, 55),
	(5, 4, 1, 100),
	(5, 4, 42, 105),
	(6, 1, 72, 90),
	(6, 6, 22, 35),
	(6, 6, 25, 77),
	(7, 7, 24, 34),
	(7, 7, 90, 200),
	(7, 7, 400, 700),
	(8, 6, 44, 338),
	(8, 4, 70, 180),
	(9, 11, 19, 83),
	(9, 11, 37, 132),
	(9, 11, 1, 50),
	(10, 2, 19, 98),
	(10, 8, 10, 44),
	(10, 8, 100, 328),
	(11, 12, 10, 30),
	(11, 12, 40, 90),
	(11, 12, 5, 25),
	(12, 13, 60, 180),
	(12, 13, 10, 40),
	(12, 13, 150, 280),
	(13, 14, 30, 60),
	(13, 14, 80, 110),
	(13, 14, 5, 45),
	(14, 15, 20, 50),
	(14, 15, 70, 120),
	(14, 15, 10, 35),
	(15, 16, 55, 90),
	(15, 16, 20, 40),
	(15, 16, 10, 60),
	(16, 17, 30, 70),
	(16, 17, 80, 120),
	(16, 17, 15, 40),
	(17, 18, 25, 55),
	(17, 18, 70, 110),
	(17, 18, 10, 30),
	(18, 19, 60, 80),
	(18, 19, 20, 50),
	(18, 19, 90, 120),
	(19, 20, 15, 40),
	(19, 20, 30, 60),
	(19, 20, 70, 100),
	(20, 21, 10, 35),
	(20, 21, 45, 80),
	(20, 21, 20, 50),
	(21, 22, 30, 60),
	(21, 22, 80, 110),
	(21, 22, 15, 45),
	(22, 23, 20, 45),
	(22, 23, 50, 80),
	(22, 23, 5, 25),
	(23, 24, 15, 40),
	(23, 24, 40, 70),
	(23, 24, 80, 110),
	(24, 25, 30, 60),
	(24, 25, 20, 50),
	(24, 25, 90, 120),
	(25, 26, 15, 45),
	(25, 26, 60, 90),
	(25, 26, 5, 25),
	(26, 27, 25, 55),
	(26, 27, 70, 100),
	(26, 27, 10, 35),
	(27, 28, 30, 60),
	(27, 28, 80, 110),
	(27, 28, 15, 45),
	(28, 29, 20, 50),
	(28, 29, 40, 70),
	(28, 29, 90, 120),
	(29, 30, 15, 40),
	(29, 30, 30, 60),
	(29, 30, 70, 100),
	(30, 31, 10, 35),
	(30, 31, 45, 80),
	(30, 31, 20, 50),
	(31, 32, 30, 60),
	(31, 32, 80, 110),
	(31, 32, 15, 45),
	(32, 33, 20, 45),
	(32, 33, 50, 80),
	(32, 33, 5, 25),
	(33, 34, 15, 40),
	(33, 34, 40, 70),
	(33, 34, 80, 110),
	(34, 35, 30, 60),
	(34, 35, 20, 50),
	(34, 35, 90, 120),
	(35, 36, 15, 45),
	(35, 36, 60, 90),
	(35, 36, 5, 25),
	(36, 37, 25, 55),
	(36, 37, 70, 100),
	(36, 37, 10, 35),
	(37, 38, 30, 60),
	(37, 38, 80, 110),
	(37, 38, 15, 45),
	(38, 39, 20, 50),
	(38, 39, 40, 70),
	(38, 39, 90, 120),
	(39, 40, 15, 40),
	(39, 40, 30, 60),
	(39, 40, 70, 100),
	(40, 41, 10, 35),
	(40, 41, 45, 80),
	(40, 41, 20, 50),
	(41, 42, 30, 60),
	(41, 42, 80, 110),
	(41, 42, 15, 45),
	(42, 43, 20, 45),
	(42, 43, 50, 80),
	(42, 43, 5, 25),
	(43, 44, 15, 40),
	(43, 44, 40, 70),
	(43, 44, 80, 110),
	(44, 45, 30, 60),
	(44, 45, 20, 50),
	(44, 45, 90, 120),
	(45, 46, 15, 45),
	(45, 46, 60, 90),
	(45, 46, 5, 25),
	(46, 47, 25, 55),
	(46, 47, 70, 100),
	(46, 47, 10, 35),
	(47, 48, 30, 60),
	(47, 48, 80, 110),
	(47, 48, 15, 45),
	(48, 49, 20, 50),
	(48, 49, 40, 70),
	(48, 49, 90, 120),
	(49, 50, 15, 40),
	(49, 50, 30, 60),
	(49, 50, 70, 100),
	(50, 51, 10, 35),
	(50, 51, 45, 80),
	(50, 51, 20, 50),
	(51, 52, 30, 60),
	(51, 52, 80, 110),
	(51, 52, 15, 45),
	(52, 53, 20, 45),
	(52, 53, 50, 80),
	(52, 53, 5, 25),
	(53, 54, 15, 40),
	(53, 54, 40, 70),
	(53, 54, 80, 110),
	(54, 55, 30, 60),
	(54, 55, 20, 50),
	(54, 55, 90, 120),
	(55, 56, 15, 45),
	(55, 56, 60, 90),
	(55, 56, 5, 25),
	(56, 57, 25, 55),
	(56, 57, 70, 100),
	(56, 57, 10, 35),
	(57, 58, 30, 60),
	(57, 58, 80, 110),
	(57, 58, 15, 45),
	(58, 59, 20, 50),
	(58, 59, 40, 70),
	(58, 59, 90, 120),
	(59, 60, 15, 40),
	(59, 60, 30, 60),
	(59, 60, 70, 100),
	(60, 61, 10, 35),
	(60, 61, 45, 80),
	(60, 61, 20, 50),
	(61, 62, 30, 60),
	(61, 62, 80, 110),
	(61, 62, 15, 45),
	(62, 63, 20, 45),
	(62, 63, 50, 80),
	(62, 63, 5, 25),
	(63, 64, 15, 40),
	(63, 64, 40, 70),
	(63, 64, 80, 110),
	(64, 65, 30, 60),
	(64, 65, 20, 50),
	(64, 65, 90, 120),
	(65, 66, 15, 45),
	(65, 66, 60, 90),
	(65, 66, 5, 25),
	(66, 67, 25, 55),
	(66, 67, 70, 100),
	(66, 67, 10, 35),
	(67, 68, 30, 60),
	(67, 68, 80, 110),
	(67, 68, 15, 45),
	(68, 69, 20, 50),
	(68, 69, 40, 70),
	(68, 69, 90, 120),
	(69, 70, 15, 40),
	(69, 70, 30, 60),
	(69, 70, 70, 100),
	(70, 71, 10, 35),
	(70, 71, 45, 80),
	(70, 71, 20, 50),
	(71, 72, 30, 60),
	(71, 72, 80, 110),
	(71, 72, 15, 45),
	(72, 73, 20, 45),
	(72, 73, 50, 80),
	(72, 73, 5, 25),
	(73, 74, 15, 40),
	(73, 74, 40, 70),
	(73, 74, 80, 110),
	(74, 75, 30, 60),
	(74, 75, 20, 50),
	(74, 75, 90, 120),
	(75, 76, 15, 45),
	(75, 76, 60, 90),
	(75, 76, 5, 25),
	(76, 77, 25, 55),
	(76, 77, 70, 100),
	(76, 77, 10, 35),
	(77, 78, 30, 60),
	(77, 78, 80, 110),
	(77, 78, 15, 45),
	(78, 79, 20, 50),
	(78, 79, 40, 70),
	(78, 79, 90, 120),
	(79, 80, 15, 40),
	(79, 80, 30, 60),
	(79, 80, 70, 100),
	(80, 81, 10, 35),
	(80, 81, 45, 80),
	(80, 81, 20, 50),
	(81, 82, 30, 60),
	(81, 82, 80, 110),
	(81, 82, 15, 45),
	(82, 83, 20, 45),
	(82, 83, 50, 80),
	(82, 83, 5, 25),
	(83, 84, 15, 40),
	(83, 84, 40, 70),
	(83, 84, 80, 110),
	(84, 85, 30, 60),
	(84, 85, 20, 50),
	(84, 85, 90, 120),
	(85, 86, 15, 45),
	(85, 86, 60, 90),
	(85, 86, 5, 25),
	(86, 87, 25, 55),
	(86, 87, 70, 100),
	(86, 87, 10, 35),
	(87, 88, 30, 60),
	(87, 88, 80, 110),
	(87, 88, 15, 45),
	(88, 89, 20, 50),
	(88, 89, 40, 70),
	(88, 89, 90, 120),
	(89, 90, 15, 40),
	(89, 90, 30, 60),
	(89, 90, 70, 100),
	(90, 91, 10, 35),
	(90, 91, 45, 80),
	(90, 91, 20, 50),
	(91, 92, 30, 60),
	(91, 92, 80, 110),
	(91, 92, 15, 45),
	(92, 93, 20, 45),
	(92, 93, 50, 80),
	(92, 93, 5, 25),
	(93, 94, 15, 40),
	(93, 94, 40, 70),
	(93, 94, 80, 110),
	(94, 95, 30, 60),
	(94, 95, 20, 50),
	(94, 95, 90, 120),
	(95, 96, 15, 45),
	(95, 96, 60, 90),
	(95, 96, 5, 25),
	(96, 97, 25, 55),
	(96, 97, 70, 100),
	(96, 97, 10, 35),
	(97, 98, 30, 60),
	(97, 98, 80, 110),
	(97, 98, 15, 45),
	(98, 99, 20, 50),
	(98, 99, 40, 70),
	(98, 99, 90, 120),
	(99, 100, 15, 40),
	(99, 100, 30, 60),
	(99, 100, 70, 100),
	(99, 10, 40, 92),
	(100, 95, 52, 77),
	(100, 90, 66, 100);

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
